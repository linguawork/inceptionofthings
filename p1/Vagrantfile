Vagrant.configure("2") do |config|
  #This defines a virtual machine within the Vagrant environment and allows you to manage multiple VMs separately.
  #defining a name for one of the machines, must define if you want to ssh them separately
  #you dont need to define names if there is only one machine to be created
  config.vm.define "areggieS" do |server| #vagrant name (used in vagrant up areggieS), it can be one of the VMs to manage
  server.vm.box = "ubuntu/jammy64" #the box to download from harshi repo of boxes: https://portal.cloud.hashicorp.com/vagrant/discover?query=ubuntu
    server.vm.hostname = "areggieS" # Guest OS hostname (inside the VM), used for setting internal OS hostname for NETWORKING
    server.vm.network "private_network", ip: "192.168.56.110"
    server.vm.provider "virtualbox" do |vb|
      vb.memory = 1024
      vb.cpus = 1
      vb.customize ['modifyvm', :id, "--name", "areggieS"] # VirtualBox name (as seen inside VB GUI), to identify a VM inside VB
    end
  #There is a common catalogue inside .vagrant file: /vagrant. It is shared between the VMs, commonly used. In the script file we save the token in the common folder
  #SSH is automatically installed.Vagrant automatically connects with SSH to VMs and runs the scripts:
    server.vm.provision "shell", path: "scripts/server.sh"
  end
  
  config.vm.define "areggieSW" do |worker|
    worker.vm.box = "ubuntu/jammy64"
    worker.vm.hostname = "areggieSW"
    worker.vm.network "private_network", ip: "192.168.56.111"
    worker.vm.provider "virtualbox" do |vb|
      vb.memory = 1024
      vb.cpus = 1
      # Change the name of the virtual machine
      vb.customize ['modifyvm', :id, "--name", "areggieSW"]
    end
    worker.vm.provision "shell", path: "scripts/worker.sh"
    
  end
end


